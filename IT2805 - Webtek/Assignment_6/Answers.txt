1) Why does the following expression 0.1 + 0.2 === 0.3 evaluate to false in Javascript?
Javascript uses a 64-bit floating point representation, meaning that numbers are represented as a whole number times a power of two. 0.1 = 1/10 cannot be represented perfectly as the denominator isn't a power of two.

2) What does the method attribute on a form element decide?
The method attribute defines HOW to send the data recieved in a form. 
The address is specified in the action attribute, but the method of which the data is sent is defined with method="get" or method="post". Get: Sent as URL variables. Post: HTTP transaction. 

3) Explain why the form fields appear in the URL when the method on form element is
changed to GET ?
That is because the query string (pairs of value and their callsign/names) are separated by the "=" character and sent to the URL. The URL can be bookmarked and can be cached. 
That is the simple task of the GET method. I suppose another reason WHY the form fields appear in the URL is because that makes the resultpage easier to save (as in a bookmark). 

4) Why is it considered bad practice to only validate form input with HTML5 and/or
Javascript?
The two methods mentioned above are subdivisions of "client-side validation". This is user friendly validation that happens live before anything has been snet to the server. 
Developers tend to use both client-side validation as well as server-side validation. 
Server-side validation authenticates the data before senting it to the server. It is the servers last line of defence and is important to stopping errors and malicious software. 
TL;DR: It is considered bad practice because one should aslo use server-side validation. 

5) When is it appropriate to use textarea over input ?
Whereas input only defines a input field the user can enter data, the textarea tag defines a mulit-line text input control. As a result, it can contain an unlimited number of characters. 
textarea is suitable for larger blocks of text. 